{
    "sourceFile": "Base/PreGame.Menu/Frontend_PreLobby.cs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1681688877818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1681688885309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     {\r\n         public Text Title,objTitle,gameSetTitle,selMapTitle,ScenDescTitle,sessNameLabel,sessNameText;\r\n         public Text[] objButton = new Text[Support.b.objective.Length];\r\n         public Gui.DropDownMenu[] menuDropDowns; \r\n-        publi\r\n+        public \r\n         public static bool[] menuDDVisible;\r\n         public static bool[][] forddin = new bool[10][],issilclicked = new bool[10][];\r\n         \r\n         public static int lastddin =-1,curddin=-1,ddlastpg=0;\r\n"
                },
                {
                    "date": 1681688890549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     {\r\n         public Text Title,objTitle,gameSetTitle,selMapTitle,ScenDescTitle,sessNameLabel,sessNameText;\r\n         public Text[] objButton = new Text[Support.b.objective.Length];\r\n         public Gui.DropDownMenu[] menuDropDowns; \r\n-        public Gui.NumTicker\r\n+        public Gui.NumTicker \r\n         public static bool[] menuDDVisible;\r\n         public static bool[][] forddin = new bool[10][],issilclicked = new bool[10][];\r\n         \r\n         public static int lastddin =-1,curddin=-1,ddlastpg=0;\r\n"
                },
                {
                    "date": 1681688914994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     {\r\n         public Text Title,objTitle,gameSetTitle,selMapTitle,ScenDescTitle,sessNameLabel,sessNameText;\r\n         public Text[] objButton = new Text[Support.b.objective.Length];\r\n         public Gui.DropDownMenu[] menuDropDowns; \r\n-        public Gui.NumTicker[] =new Gui.NumTicker[]\r\n+        public Gui.NumTicker[] =new Gui.NumTicker[2]\r\n         public static bool[] menuDDVisible;\r\n         public static bool[][] forddin = new bool[10][],issilclicked = new bool[10][];\r\n         \r\n         public static int lastddin =-1,curddin=-1,ddlastpg=0;\r\n"
                }
            ],
            "date": 1681688877818,
            "name": "Commit-0",
            "content": "using System;\r\nusing SFML.Graphics;\r\nusing SFML.System;\r\nusing SFML.Window;\r\nnamespace CityExtreme.Base.PreGame_Menu{\r\n    public class PreLobby_FE : Drawable\r\n    {\r\n        public Text Title,objTitle,gameSetTitle,selMapTitle,ScenDescTitle,sessNameLabel,sessNameText;\r\n        public Text[] objButton = new Text[Support.b.objective.Length];\r\n        public Gui.DropDownMenu[] menuDropDowns; \r\n        publi\r\n        public static bool[] menuDDVisible;\r\n        public static bool[][] forddin = new bool[10][],issilclicked = new bool[10][];\r\n        \r\n        public static int lastddin =-1,curddin=-1,ddlastpg=0;\r\n        public Gui.TextField SessionName;\r\n        static PreLobby_FE _self;\r\n        public PreLobby_FE(string type, ContextSettings? cs){\r\n            //Global Titles for Sections\r\n            objTitle = new Text(\"Select Objective\",Support.b.defFont,65);\r\n            gameSetTitle = new Text(\"Configure Session Settings\",Support.b.defFont,65);\r\n            selMapTitle = new Text(\"Select Game Map\",Support.b.defFont, 65);\r\n            ScenDescTitle = new Text(\"Objective Description\",Support.b.defFont,65);\r\n            objTitle.FillColor = Color.White;\r\n            gameSetTitle.FillColor = Color.White;\r\n            selMapTitle.FillColor = Color.White;\r\n            ScenDescTitle.FillColor = Color.White;\r\n            for(int i=0;i<Support.b.objective.Length;i++){\r\n                objButton[i] = new Text(Support.b.objective[i],Support.b.defFont,45);\r\n                objButton[i].FillColor = Color.White;\r\n             }\r\n             sessNameLabel = new Text(\"Session Name\",Support.b.defFont,30);\r\n             sessNameLabel.FillColor = Color.White;\r\n             sessNameText = new Text(Support.b.curplayer,Support.b.defFont,30);\r\n             sessNameText.DisplayedString = \"New Game\";\r\n             sessNameText.FillColor = Color.White;\r\n             \r\n            //End Section\r\n            switch(type){\r\n                case \"local\":{\r\n                    Title = new Text(\" Configure Local Session\",Support.b.defFont,85);\r\n                    sessNameLabel = new Text(\"Session Name: \",Support.b.defFont,30);\r\n                    \r\n\r\n                    Title.FillColor = Color.White;\r\n                    if(Support.b.w != null){\r\n                        Title.Position = new Vector2f(Support.b.w.Size.X/(float)3.75,0);\r\n                        objTitle.Position = new Vector2f(10,Title.Position.Y + Title.GetGlobalBounds().Height +10);\r\n                        gameSetTitle.Position = new Vector2f(Support.b.w.Size.X - (gameSetTitle.GetGlobalBounds().Width*2)+100,Title.GetGlobalBounds().Height+10);\r\n                        SessionName = new Gui.TextField(\"Session Name\",new Vector2f(gameSetTitle.Position.X,gameSetTitle.Position.Y + gameSetTitle.GetGlobalBounds().Height+10));\r\n                        SessionName.SetInputDisplayedStr(\"New Game\");\r\n                        SessionName.SetCharSize(65);\r\n                        SessionName.SetInputFieldPos();\r\n                        sessNameLabel.Position = new Vector2f(gameSetTitle.Position.X,gameSetTitle.Position.Y + gameSetTitle.GetGlobalBounds().Height+10);\r\n                        sessNameText.Position = new Vector2f(sessNameLabel.Position.X + sessNameLabel.GetGlobalBounds().Width + 10,sessNameLabel.Position.Y+sessNameLabel.GetGlobalBounds().Height+10);\r\n                        menuDropDowns = new Gui.DropDownMenu[Support.b.ddItemStrings.GetLongLength(0)];\r\n                        menuDDVisible = new bool[menuDropDowns.Length];\r\n                        for(int i=0;i<menuDDVisible.Length;i++){\r\n                            menuDDVisible[i]=false;\r\n                        }\r\n                        for(int i=0;i<objButton.Length;i++){\r\n                            if(i==0){\r\n                                objButton[i].Position = new Vector2f(objTitle.Position.X,objTitle.Position.Y+objTitle.GetGlobalBounds().Height+10);\r\n\r\n                            }else{\r\n                                objButton[i].Position = new Vector2f(objButton[i-1].Position.X,objButton[i-1].Position.Y+objButton[i-1].GetGlobalBounds().Height +5);\r\n                            }\r\n                        \r\n                        }\r\n                        selMapTitle.Position = new Vector2f(0,Support.b.w.Size.Y*.575f);\r\n\r\n\r\n                    }\r\n                    _self =this;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    break;\r\n                }\r\n                case \"Network\":{\r\n                    \r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        public void initandPositionDropdowns(){\r\n          \r\n            for(int i=0;i<Support.b.objSelected.Length;i++){\r\n                    if(Support.b.objSelected[i]){\r\n                        objButton[i].FillColor = Color.Green;\r\n                    }else{\r\n                        objButton[i].FillColor = Color.White;\r\n                    }\r\n                }\r\n            if(Support.b.curobjective == \"Total Daily Profit\" && Support.b.curobjective!=Support.b.lastobjective){\r\n                \r\n                string[] tmp = new string[Support.b.ddItemStrings.GetLongLength(1)];\r\n                        for(int i=0;i<Support.b.ddItemStrings.GetLongLength(1);i++){\r\n                            tmp[i] = Support.b.ddItemStrings[0,i];\r\n\r\n                        }\r\n                        menuDropDowns[0] = new Gui.DropDownMenu(2,new Vector2f(100,100),new Vector2f(SessionName.Position.X,SessionName.Position.Y+SessionName.GlobalBounds.Height+sessNameText.GetGlobalBounds().Height+40),Support.b.objSettings[0,0,0],tmp,0);\r\n                        if(Support.b.plDDSilClicked[0] == null || Support.b.plForDDin[0] ==null)\r\n                        menuDropDowns[0].setNoOfBools();\r\n\r\n                        \r\n                        tmp = new string[Support.b.ddItemStrings.GetLongLength(1)];\r\n                        for(int i=0;i<Support.b.ddItemStrings.GetLongLength(1);i++){\r\n                            tmp[i] = Support.b.ddItemStrings[1,i];\r\n\r\n                        }\r\n                        menuDropDowns[1] = new Gui.DropDownMenu(2,new Vector2f(100,100),new Vector2f(sessNameLabel.Position.X+menuDropDowns[0].backing.Size.X + menuDropDowns[0].ddbacking.Size.X + 10,menuDropDowns[0].backing.Position.Y+menuDropDowns[0].backing.GetGlobalBounds().Height+10),Support.b.objSettings[0,1,0],tmp,1);\r\n                        if(Support.b.plDDSilClicked[1] == null || Support.b.plForDDin[1] ==null)\r\n                        menuDropDowns[1].setNoOfBools(); \r\n                        for(int a =0;a<menuDropDowns.Length;a++){\r\n                            if((a==lastddin && menuDropDowns[a]!=null)||menuDropDowns[a]!=null){\r\n                                if(Support.b.plDDSilClicked[a][0] == true){\r\n                                    \r\n                                    for(int b=0;b<Support.b.plForDDin[a].Length;b++){\r\n                                        if(b<2 && lastddin == a){\r\n                                            Support.b.plForDDin[a][b] = true;\r\n                                        \r\n                                        }else if(lastddin == a){\r\n                                            Support.b.plForDDin[a][b] = false;\r\n\r\n                                        }                                       \r\n                                        else if(b<2){\r\n                                            Support.b.plForDDin[a][b] = false;\r\n                                            \r\n                                        }else{\r\n                                            Support.b.plForDDin[a][b] = false;\r\n                                        }\r\n                                    }\r\n                                    if(a==lastddin)\r\n                                    {\r\n                                        menuDropDowns[a].isvisible =true;\r\n                                        if(ddlastpg != menuDropDowns[a].curpg)\r\n                                        menuDropDowns[a].curpg = ddlastpg;\r\n                                    }\r\n                                    else\r\n                                    menuDropDowns[a].isvisible =false;\r\n                                }\r\n                            }\r\n\r\n                            \r\n                        }\r\n                        \r\n\r\n\r\n            }\r\n        }\r\n        static void objsel(){\r\n            for(int i =0;i<_self.objButton.Length;i++){\r\n                        if(_self.objButton[i].GetGlobalBounds().Contains(Mouse.GetPosition().X,Mouse.GetPosition().Y)){\r\n                            _self.objButton[i].FillColor = Color.Green;\r\n                            Support.b.lastobjective = Support.b.curobjective;\r\n                            Support.b.curobjective = _self.objButton[i].DisplayedString;\r\n                            Support.b.objSelected[i] = true;\r\n                            _self.initandPositionDropdowns();\r\n                        }else if(Support.b.curobjective == _self.objButton[i].DisplayedString){\r\n                            Support.b.objSelected[i] = true;\r\n                        }else{\r\n                            Support.b.objSelected[i] = false;\r\n                        }\r\n\r\n                    }\r\n        }\r\n        public void MouseWheelScrolled(object? sender,MouseWheelScrollEventArgs e){\r\n            if(menuDropDowns!=null){\r\n                \r\n                    if(menuDropDowns[lastddin] != null ){\r\n                        menuDropDowns[lastddin].wheelMoved(sender,e);\r\n                    }\r\n                \r\n            }\r\n        }\r\n        public static void MouseClick(object? sender, MouseButtonEventArgs e){\r\n            switch(e.Button){\r\n                case Mouse.Button.Left:{\r\n                    if(Support.b.curobjective == \"Total Daily Profit\"){\r\n                        objsel();\r\n                        bool ib,insil;\r\n                        int l_id;\r\n                        if(lastddin>=0){\r\n                        l_id =lastddin;\r\n\r\n                            if( _self.menuDropDowns[l_id] !=null){\r\n                                \r\n                            ib = Support.b.plForDDin[l_id][0];\r\n                            insil = Support.b.plForDDin[l_id][1];\r\n                            if(lastddin == _self.menuDropDowns[l_id].id && ib && insil ){\r\n                                \r\n                                \r\n                                    if(_self.menuDropDowns[l_id] != null){\r\n                                        \r\n                                            Support.b.plDDSilClicked[l_id][0] = true;\r\n                                            \r\n                                            if(Support.b.plForDDin[l_id][0] && Support.b.plDDSilClicked[l_id][0]){\r\n                                                if(!_self.menuDropDowns[l_id].isvisible)\r\n                                                Support.b.plDDSilClicked[l_id][0] = true;\r\n                                                else{\r\n                                                    Support.b.plDDSilClicked[l_id][0] = false;\r\n                                                }\r\n\r\n                                            }\r\n                                        \r\n\r\n                                    }\r\n                                    \r\n                                \r\n                                \r\n                                     \r\n                                    Console.Write(_self.menuDropDowns[lastddin].getsilclicked().ToString() + _self.menuDropDowns[1].getsilclicked()+Environment.NewLine);\r\n                                    objsel();\r\n                            }else{\r\n                                foreach(Gui.DropDownMenu dd in _self.menuDropDowns){\r\n                                    if(dd != null)\r\n                                    switch(dd.id){\r\n                                        case 0:{\r\n                                            \r\n                                            _self.menuDropDowns[0].setsilclicked(false);\r\n                                            Support.b.plForDDin[0][0] =false;\r\n                                            Support.b.plForDDin[0][1] = false;\r\n                                            Support.b.plDDSilClicked [0][0]= false;\r\n\r\n                                            break;\r\n                                        }\r\n                                        case 1:{\r\n                                            _self.menuDropDowns[1].setsilclicked(false);\r\n                                            Support.b.plDDSilClicked[1][0]=false;\r\n\r\n                                            break;\r\n\r\n                                        }\r\n                                    }\r\n                                }\r\n                                objsel();\r\n                            }\r\n                            }else{\r\n                                objsel();\r\n                            }\r\n                                \r\n\r\n\r\n                            \r\n                        }else{\r\n                            objsel();\r\n                        }\r\n                    }else{\r\n                        objsel();\r\n                        }   \r\n                    break;\r\n                    \r\n\r\n                    \r\n                }\r\n            }\r\n\r\n                \r\n            \r\n        }\r\n            \r\n                \r\n                    \r\n            \r\n            \r\n        \r\n        \r\n        public void Draw(RenderTarget target, RenderStates states)\r\n        {\r\n            \r\n            initandPositionDropdowns(); \r\n            Title.Draw(target,states);\r\n            if(objTitle!=null)\r\n            objTitle.Draw(target,states);\r\n            if(objButton !=null)\r\n            foreach(Text ob in objButton){\r\n                if(ob !=null){\r\n                    \r\n                        ob.Draw(target,states);\r\n                    \r\n                }\r\n\r\n            }\r\n            if(Support.b.curobjective == \"Total Daily Profit\"){\r\n              \r\n             \r\n            \r\n                if(menuDropDowns !=null){\r\n                   \r\n                            \r\n                                for(int i=0;i<_self.menuDropDowns.Length;i++){\r\n                                    if(_self.menuDropDowns[i] != null){\r\n                                        if(_self.menuDropDowns[i].isvisible && Support.b.plDDSilClicked[i][0])\r\n                                        _self.menuDropDowns[i].Draw(target,states);\r\n                                        else\r\n                                        _self.menuDropDowns[i].Draw(target,states);\r\n                                    }\r\n\r\n                                }\r\n                            \r\n                            \r\n                }\r\n\r\n            }\r\n                    \r\n                \r\n            \r\n            selMapTitle.Draw(target,states);\r\n            gameSetTitle.Draw(target,states);\r\n            //sessNameLabel.Draw(target,states);\r\n            //sessNameText.Draw(target,states);\r\n            target.Draw(SessionName);\r\n        }\r\n    }\r\n}\r\n"
        }
    ]
}